!function(t){var e={};function s(i){if(e[i])return e[i].exports;var n=e[i]={i:i,l:!1,exports:{}};return t[i].call(n.exports,n,n.exports,s),n.l=!0,n.exports}s.m=t,s.c=e,s.d=function(t,e,i){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(s.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)s.d(i,n,function(e){return t[e]}.bind(null,n));return i},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=6)}([function(t,e,s){"use strict";s.d(e,"a",(function(){return i}));const i={},n=i.Vector=class t extends Float32Array{static create(...e){return new t(e)}copy(){return new t(this)}equals(t){return this.every((e,s)=>e==t[s])}plus(t){return this.map((e,s)=>e+t[s])}minus(t){return this.map((e,s)=>e-t[s])}times_pairwise(t){return this.map((e,s)=>e*t[s])}scale_by(t){this.forEach((e,s,i)=>i[s]*=t)}times(t){return this.map(e=>t*e)}randomized(t){return this.map(e=>e+t*(Math.random()-.5))}mix(t,e){return this.map((s,i)=>(1-e)*s+e*t[i])}norm(){return Math.sqrt(this.dot(this))}normalized(){return this.times(1/this.norm())}normalize(){this.scale_by(1/this.norm())}dot(t){return 2==this.length?this[0]*t[0]+this[1]*t[1]:this.reduce((e,s,i)=>e+s*t[i],0)}static cast(...e){return e.map(e=>t.from(e))}to3(){return a(this[0],this[1],this[2])}to4(t){return h(this[0],this[1],this[2],+t)}cross(t){return a(this[1]*t[2]-this[2]*t[1],this[2]*t[0]-this[0]*t[2],this[0]*t[1]-this[1]*t[0])}to_string(){return"[vector "+this.join(", ")+"]"}},o=i.Vector3=class t extends Float32Array{static create(e,s,i){const n=new t(3);return n[0]=e,n[1]=s,n[2]=i,n}copy(){return t.from(this)}equals(t){return this[0]==t[0]&&this[1]==t[1]&&this[2]==t[2]}plus(t){return a(this[0]+t[0],this[1]+t[1],this[2]+t[2])}minus(t){return a(this[0]-t[0],this[1]-t[1],this[2]-t[2])}times(t){return a(this[0]*t,this[1]*t,this[2]*t)}times_pairwise(t){return a(this[0]*t[0],this[1]*t[1],this[2]*t[2])}add_by(t){this[0]+=t[0],this[1]+=t[1],this[2]+=t[2]}subtract_by(t){this[0]-=t[0],this[1]-=t[1],this[2]-=t[2]}scale_by(t){this[0]*=t,this[1]*=t,this[2]*=t}scale_pairwise_by(t){this[0]*=t[0],this[1]*=t[1],this[2]*=t[2]}randomized(t){return a(this[0]+t*(Math.random()-.5),this[1]+t*(Math.random()-.5),this[2]+t*(Math.random()-.5))}mix(t,e){return a((1-e)*this[0]+e*t[0],(1-e)*this[1]+e*t[1],(1-e)*this[2]+e*t[2])}norm(){return Math.sqrt(this[0]*this[0]+this[1]*this[1]+this[2]*this[2])}normalized(){const t=1/this.norm();return a(this[0]*t,this[1]*t,this[2]*t)}normalize(){const t=1/this.norm();this[0]*=t,this[1]*=t,this[2]*=t}dot(t){return this[0]*t[0]+this[1]*t[1]+this[2]*t[2]}cross(t){return a(this[1]*t[2]-this[2]*t[1],this[2]*t[0]-this[0]*t[2],this[0]*t[1]-this[1]*t[0])}static cast(...e){return e.map(e=>t.from(e))}static unsafe(e,s,i){const n=a(0,0,0);return t.unsafe=(t,e,s)=>(n[0]=t,n[1]=e,n[2]=s,n),t.unsafe(e,s,i)}to4(t){return h(this[0],this[1],this[2],+t)}to_string(){return"[vec3 "+this.join(", ")+"]"}},r=i.Vector4=class t extends Float32Array{static create(e,s,i,n){const o=new t(4);return o[0]=e,o[1]=s,o[2]=i,o[3]=n,o}copy(){return t.from(this)}equals(){return this[0]==b[0]&&this[1]==b[1]&&this[2]==b[2]&&this[3]==b[3]}plus(t){return h(this[0]+t[0],this[1]+t[1],this[2]+t[2],this[3]+t[3])}minus(t){return h(this[0]-t[0],this[1]-t[1],this[2]-t[2],this[3]-t[3])}times(t){return h(this[0]*t,this[1]*t,this[2]*t,this[3]*t)}times_pairwise(t){return h(this[0]*t[0],this[1]*t[1],this[2]*t[2],this[3]*t[3])}add_by(t){this[0]+=t[0],this[1]+=t[1],this[2]+=t[2],this[3]+=t[3]}subtract_by(t){this[0]-=t[0],this[1]-=t[1],this[2]-=t[2],this[3]-=t[3]}scale_by(t){this[0]*=t,this[1]*=t,this[2]*=t,this[3]*=t}scale_pairwise_by(t){this[0]*=t[0],this[1]*=t[1],this[2]*=t[2],this[3]*=t[3]}randomized(t){return h(this[0]+t*(Math.random()-.5),this[1]+t*(Math.random()-.5),this[2]+t*(Math.random()-.5),this[3]+t*(Math.random()-.5))}mix(t,e){return h((1-e)*this[0]+e*t[0],(1-e)*this[1]+e*t[1],(1-e)*this[2]+e*t[2],(1-e)*this[3]+e*t[3])}norm(){return Math.sqrt(this[0]*this[0]+this[1]*this[1]+this[2]*this[2])}normalized(){const t=1/this.norm();return h(this[0]*t,this[1]*t,this[2]*t,this[3])}normalize(){const t=1/this.norm();this[0]*=t,this[1]*=t,this[2]*=t}dot(t){return this[0]*t[0]+this[1]*t[1]+this[2]*t[2]+this[3]*t[3]}static unsafe(t,e,s,i){const n=h(0,0,0,0);Vec4.unsafe=(t,e,s,i)=>{n[0]=t,n[1]=e,n[2]=s,n[3]=i}}to3(){return a(this[0],this[1],this[2])}to_string(){return"[vec4 "+this.join(", ")+"]"}},a=(i.vec=n.create,i.vec3=o.create),h=i.vec4=r.create,c=(i.unsafe3=o.unsafe,i.unsafe4=r.unsafe,i.color=r.create,i.Matrix=class t extends Array{constructor(...t){super(0),this.push(...t)}set(t){this.length=0,this.push(...t)}set_identity(t,e){this.length=0;for(let s=0;s<t;s++)this.push(Array(e).fill(0)),s<e&&(this[s][s]=1)}sub_block(e,s){return t.from(this.slice(e[0],s[0]).map(t=>t.slice(e[1],s[1])))}copy(){return this.map(t=>[...t])}equals(t){return this.every((e,s)=>e.every((e,i)=>e==t[s][i]))}plus(t){return this.map((e,s)=>e.map((e,i)=>e+t[s][i]))}minus(t){return this.map((e,s)=>e.map((e,i)=>e-t[s][i]))}transposed(){return this.map((t,e)=>t.map((t,s)=>this[s][e]))}times(e,s){const i=e.length;if(void 0===i)return this.map(t=>t.map(t=>e*t));const n=e[0].length;if(void 0===n){let t=s||new r(this.length);for(let s=0;s<i;s++)t[s]=e.dot(this[s]);return t}let o=s||t.from(new Array(this.length));for(let t=0;t<this.length;t++){s||(o[t]=new Array(n));for(let s=0;s<n;s++){o[t][s]=0;for(let n=0;n<i;n++)o[t][s]+=this[t][n]*e[n][s]}}return o}pre_multiply(t){const e=t.times(this);return this.length=0,this.push(...e),this}post_multiply(t){const e=this.times(t);return this.length=0,this.push(...e),this}static flatten_2D_to_1D(t){let e=0,s=new Float32Array(t.length&&t.length*t[0].length);for(let i=0;i<t.length;i++)for(let n=0;n<t[i].length;n++)s[e++]=t[i][n];return s}to_string(){return"["+this.map((t,e)=>"["+t.join(", ")+"]").join(" ")+"]"}}),l=i.Mat4=class t extends c{static identity(){return c.of([1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1])}static rotation(t,e,s,i){let[n,o,r]=((t,e,s)=>{const i=Math.sqrt(t*t+e*e+s*s);return[t/i,e/i,s/i]})(e,s,i),[a,h]=[Math.cos(t),Math.sin(t)],l=1-a;return c.of([n*n*l+a,n*o*l-r*h,n*r*l+o*h,0],[n*o*l+r*h,o*o*l+a,o*r*l-n*h,0],[n*r*l-o*h,o*r*l+n*h,r*r*l+a,0],[0,0,0,1])}static scale(t,e,s){return c.of([t,0,0,0],[0,e,0,0],[0,0,s,0],[0,0,0,1])}static translation(t,e,s){return c.of([1,0,0,t],[0,1,0,e],[0,0,1,s],[0,0,0,1])}static look_at(e,s,i){let n=s.minus(e).normalized(),o=n.cross(i).normalized(),r=o.cross(n).normalized();if(!o.every(t=>t==t))throw"Two parallel vectors were given";return n.scale_by(-1),t.translation(-o.dot(e),-r.dot(e),-n.dot(e)).times(c.of(o.to4(0),r.to4(0),n.to4(0),h(0,0,0,1)))}static orthographic(e,s,i,n,o,r){return t.scale(a(1/(s-e),1/(n-i),1/(r-o))).times(t.translation(a(-e-s,-n-i,-o-r))).times(t.scale(a(2,2,-2)))}static perspective(t,e,s,i){const n=1/Math.tan(t/2),o=i-s;return c.of([n/e,0,0,0],[0,n,0,0],[0,0,-(s+i)/o,-2*s*i/o],[0,0,-1,0])}static inverse(e){const s=t.identity(),i=e[0][0],n=e[0][1],o=e[0][2],r=e[0][3],a=e[1][0],h=e[1][1],c=e[1][2],l=e[1][3],d=e[2][0],u=e[2][1],p=e[2][2],m=e[2][3],g=e[3][0],_=e[3][1],f=e[3][2],b=e[3][3];return s[0][0]=c*m*_-l*p*_+l*u*f-h*m*f-c*u*b+h*p*b,s[0][1]=r*p*_-o*m*_-r*u*f+n*m*f+o*u*b-n*p*b,s[0][2]=o*l*_-r*c*_+r*h*f-n*l*f-o*h*b+n*c*b,s[0][3]=r*c*u-o*l*u-r*h*p+n*l*p+o*h*m-n*c*m,s[1][0]=l*p*g-c*m*g-l*d*f+a*m*f+c*d*b-a*p*b,s[1][1]=o*m*g-r*p*g+r*d*f-i*m*f-o*d*b+i*p*b,s[1][2]=r*c*g-o*l*g-r*a*f+i*l*f+o*a*b-i*c*b,s[1][3]=o*l*d-r*c*d+r*a*p-i*l*p-o*a*m+i*c*m,s[2][0]=h*m*g-l*u*g+l*d*_-a*m*_-h*d*b+a*u*b,s[2][1]=r*u*g-n*m*g-r*d*_+i*m*_+n*d*b-i*u*b,s[2][2]=n*l*g-r*h*g+r*a*_-i*l*_-n*a*b+i*h*b,s[2][3]=r*h*d-n*l*d-r*a*u+i*l*u+n*a*m-i*h*m,s[3][0]=c*u*g-h*p*g-c*d*_+a*p*_+h*d*f-a*u*f,s[3][1]=n*p*g-o*u*g+o*d*_-i*p*_-n*d*f+i*u*f,s[3][2]=o*h*g-n*c*g-o*a*_+i*c*_+n*a*f-i*h*f,s[3][3]=n*c*d-o*h*d+o*a*u-i*c*u-n*a*p+i*h*p,s.times(1/(i*s[0][0]+a*s[0][1]+d*s[0][2]+g*s[0][3]))}},d=i.Keyboard_Manager=class{constructor(t=document,e=((t,e)=>t(e))){this.saved_controls={},this.actively_pressed_keys=new Set,this.callback_behavior=e,t.addEventListener("keydown",this.key_down_handler.bind(this)),t.addEventListener("keyup",this.key_up_handler.bind(this)),window.addEventListener("focus",()=>this.actively_pressed_keys.clear())}key_down_handler(t){if(!["INPUT","TEXTAREA"].includes(t.target.tagName)){this.actively_pressed_keys.add(t.key);for(let e of Object.values(this.saved_controls))e.shortcut_combination.every(t=>this.actively_pressed_keys.has(t))&&t.ctrlKey==e.shortcut_combination.includes("Control")&&t.shiftKey==e.shortcut_combination.includes("Shift")&&t.altKey==e.shortcut_combination.includes("Alt")&&t.metaKey==e.shortcut_combination.includes("Meta")&&this.callback_behavior(e.callback,t)}}key_up_handler(t){const e="qwertyuiopasdfghjklzxcvbnm1234567890-=[]\\;',./",s='QWERTYUIOPASDFGHJKLZXCVBNM!@#$%^&*()_+{}|:"<>?',i=[t.key,s[e.indexOf(t.key)],e[s.indexOf(t.key)]];for(let e of Object.values(this.saved_controls))i.some(t=>e.shortcut_combination.includes(t))&&this.callback_behavior(e.keyup_callback,t);i.forEach(t=>this.actively_pressed_keys.delete(t))}add(t,e=(()=>{}),s=(()=>{})){this.saved_controls[t.join("+")]={shortcut_combination:t,callback:e,keyup_callback:s}}},u=i.Graphics_Card_Object=class t{constructor(){this.gpu_instances=new Map}copy_onto_graphics_card(e,s){const i=this.gpu_instances.get(e);if(!i&&(t.idiot_alarm|=0,t.idiot_alarm++>200))throw"Error: You are sending a lot of object definitions to the GPU, probably by mistake!  Many of them are likely duplicates, which you\n                   don't want since sending each one is very slow.  To avoid this, from your display() function avoid ever declaring a Shape Shader\n                   or Texture (or subclass of these) with \"new\", thus causing the definition to be re-created and re-transmitted every frame.  \n                   Instead, call these in your scene's constructor and keep the result as a class member, or otherwise make sure it only happens \n                   once.  In the off chance that you have a somehow deformable shape that MUST change every frame, then at least use the special\n                   arguments of copy_onto_graphics_card to limit which buffers get overwritten every frame to only the necessary ones.";return i||this.gpu_instances.set(e,s).get(e)}activate(t,...e){return this.gpu_instances.get(t)||this.copy_onto_graphics_card(t,...e)}},p=i.Vertex_Buffer=class extends u{constructor(...t){super(),[this.arrays,this.indices]=[{},[]];for(let e of t)this.arrays[e]=[]}copy_onto_graphics_card(t,e=Object.keys(this.arrays),s=!0){const i=this.gpu_instances.get(t),n=super.copy_onto_graphics_card(t,{webGL_buffer_pointers:{}}),o=t,r=i?(t,e)=>o.bufferSubData(t,0,e):(t,e)=>o.bufferData(t,e,o.STATIC_DRAW);for(let t of e)i||(n.webGL_buffer_pointers[t]=o.createBuffer()),o.bindBuffer(o.ARRAY_BUFFER,n.webGL_buffer_pointers[t]),r(o.ARRAY_BUFFER,c.flatten_2D_to_1D(this.arrays[t]));return this.indices.length&&s&&(i||(n.index_buffer=o.createBuffer()),o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,n.index_buffer),r(o.ELEMENT_ARRAY_BUFFER,new Uint32Array(this.indices))),n}execute_shaders(t,e,s){this.indices.length?(t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,e.index_buffer),t.drawElements(t[s],this.indices.length,t.UNSIGNED_INT,0)):t.drawArrays(t[s],0,Object.values(this.arrays)[0].length)}draw(t,e,s,i,n="TRIANGLES"){const o=this.activate(t.context);i.shader.activate(t.context,o.webGL_buffer_pointers,e,s,i),this.execute_shaders(t.context,o,n)}},m=(i.Shape=class extends p{static insert_transformed_copy_into(t,e,s=l.identity()){const i=new this(...e);t.indices.push(...i.indices.map(e=>e+t.arrays.position.length));for(let e in i.arrays)"position"==e||"tangents"==e?t.arrays[e].push(...i.arrays[e].map(t=>s.times(t.to4(1)).to3())):"normal"==e?t.arrays[e].push(...i.arrays[e].map(t=>l.inverse(s.transposed()).times(t.to4(1)).to3())):t.arrays[e].push(...i.arrays[e])}make_flat_shaded_version(){return class extends this.constructor{constructor(...t){super(...t),this.duplicate_the_shared_vertices(),this.flat_shade()}}}duplicate_the_shared_vertices(){const t={};for(let e in this.arrays)t[e]=[];for(let e of this.indices)for(let s in this.arrays)t[s].push(this.arrays[s][e]);Object.assign(this.arrays,t),this.indices=this.indices.map((t,e)=>e)}flat_shade(){for(let t=0;t<(this.indices?this.indices.length:this.arrays.position.length);t+=3){const e=this.indices.length?[this.indices[t],this.indices[t+1],this.indices[t+2]]:[t,t+1,t+2],[s,i,n]=e.map(t=>this.arrays.position[t]),r=s.minus(i).cross(n.minus(s)).normalized();r.times(.1).plus(s).norm()<s.norm()&&r.scale_by(-1);for(let t of e)this.arrays.normal[t]=o.from(r)}}normalize_positions(t=!0){let e=this.arrays.position;const s=e.reduce((t,s)=>t.plus(s.times(1/e.length)),a(0,0,0));e=e.map(t=>t.minus(s));const i=e.reduce((t,s)=>t.plus(s.map(t=>Math.abs(t)).times(1/e.length)),a(0,0,0));this.arrays.position=t?e.map(t=>t.map((t,e)=>t/i[e])):e.map(t=>t.times(1/i.norm()))}},i.Light=class{constructor(t,e,s){Object.assign(this,{position:t,color:e,attenuation:1/s})}},i.Graphics_Addresses=class{constructor(t,e){const s=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<s;++i){let s=e.getActiveUniform(t,i).name.split("[")[0];this[s]=e.getUniformLocation(t,s)}this.shader_attributes={};const i={5126:1,35664:2,35665:3,35666:4},n=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES);for(let s=0;s<n;s++){const n=e.getActiveAttrib(t,s);this.shader_attributes[n.name]={index:e.getAttribLocation(t,n.name),size:i[n.type],enabled:!0,type:e.FLOAT,normalized:!1,stride:0,pointer:0}}}}),g=i.Container=class{override(t){return this.helper(t,Object.create(this.constructor.prototype))}replace(t){return this.helper(t,this)}helper(t,e){if(Object.assign(e,this),t.constructor===Object)return Object.assign(e,t);const s=Object.entries(this).filter(([e,s])=>t instanceof s.constructor);if(!s[0])throw"Container: Can't figure out which value you're trying to replace; nothing matched by type.";return Object.assign(e,{[s[0][0]]:t})}},_=(i.Material=class extends g{constructor(t,e){super(),Object.assign(this,{shader:t},e)}},i.Shader=class extends u{copy_onto_graphics_card(t){const e={program:void 0,gpu_addresses:void 0,vertShdr:void 0,fragShdr:void 0},s=super.copy_onto_graphics_card(t,e),i=t,n=s.program||t.createProgram(),o=s.vertShdr||i.createShader(i.VERTEX_SHADER),r=s.fragShdr||i.createShader(i.FRAGMENT_SHADER);if(s.vertShdr&&i.detachShader(n,o),s.fragShdr&&i.detachShader(n,r),i.shaderSource(o,this.vertex_glsl_code()),i.compileShader(o),!i.getShaderParameter(o,i.COMPILE_STATUS))throw"Vertex shader compile error: "+i.getShaderInfoLog(o);if(i.shaderSource(r,this.fragment_glsl_code()),i.compileShader(r),!i.getShaderParameter(r,i.COMPILE_STATUS))throw"Fragment shader compile error: "+i.getShaderInfoLog(r);if(i.attachShader(n,o),i.attachShader(n,r),i.linkProgram(n),!i.getProgramParameter(n,i.LINK_STATUS))throw"Shader linker error: "+i.getProgramInfoLog(this.program);return Object.assign(s,{program:n,vertShdr:o,fragShdr:r,gpu_addresses:new m(n,i)}),s}activate(t,e,s,i,n){const o=super.activate(t);t.useProgram(o.program),this.update_GPU(t,o.gpu_addresses,s,i,n);for(let[s,i]of Object.entries(o.gpu_addresses.shader_attributes))i.enabled?(t.enableVertexAttribArray(i.index),t.bindBuffer(t.ARRAY_BUFFER,e[s]),t.vertexAttribPointer(i.index,i.size,i.type,i.normalized,i.stride,i.pointer)):i.index>=0&&t.disableVertexAttribArray(i.index)}vertex_glsl_code(){}fragment_glsl_code(){}update_GPU(){}},i.Texture=class extends u{constructor(t,e="LINEAR_MIPMAP_LINEAR"){super(),Object.assign(this,{filename:t,min_filter:e}),this.image=new Image,this.image.onload=()=>this.ready=!0,this.image.crossOrigin="Anonymous",this.image.src=t}copy_onto_graphics_card(t,e=!0){const s={texture_buffer_pointer:void 0},i=super.copy_onto_graphics_card(t,s);i.texture_buffer_pointer||(i.texture_buffer_pointer=t.createTexture());const n=t;return n.bindTexture(n.TEXTURE_2D,i.texture_buffer_pointer),e&&(n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,!0),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,n.LINEAR),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n[this.min_filter])),n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,this.image),(this.min_filter="LINEAR_MIPMAP_LINEAR")&&n.generateMipmap(n.TEXTURE_2D),i}activate(t,e=0){if(!this.ready)return;const s=super.activate(t);t.activeTexture(t["TEXTURE"+e]),t.bindTexture(t.TEXTURE_2D,s.texture_buffer_pointer)}},i.Program_State=class extends g{constructor(t=l.identity(),e=l.identity()){super(),this.set_camera(t);const s={projection_transform:e,animate:!0,animation_time:0,animation_delta_time:0};Object.assign(this,s)}set_camera(t){Object.assign(this,{camera_transform:l.inverse(t),camera_inverse:t})}});i.Webgl_Manager=class{constructor(t,e,s){const i={instances:new Map,scenes:[],prev_time:0,canvas:t,scratchpad:{},program_state:new _};Object.assign(this,i);for(let t of["webgl","experimental-webgl","webkit-3d","moz-webgl"])if(this.context=this.canvas.getContext(t))break;if(!this.context)throw"Canvas failed to make a WebGL context.";const n=this.context;var o;this.set_size(s),n.clearColor.apply(n,e),n.getExtension("OES_element_index_uint"),n.enable(n.DEPTH_TEST),n.enable(n.BLEND),n.blendFunc(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA),n.bindTexture(n.TEXTURE_2D,n.createTexture()),n.texImage2D(n.TEXTURE_2D,0,n.RGBA,1,1,0,n.RGBA,n.UNSIGNED_BYTE,new Uint8Array([255,0,0,255])),window.requestAnimFrame=(o=window).requestAnimationFrame||o.webkitRequestAnimationFrame||o.mozRequestAnimationFrame||o.oRequestAnimationFrame||o.msRequestAnimationFrame||function(t,e){o.setTimeout(t,1e3/60)}}set_size(t=[1080,600]){const[e,s]=t;this.canvas.style.width=e+"px",this.canvas.style.height=s+"px",Object.assign(this,{width:e,height:s}),Object.assign(this.canvas,{width:e,height:s}),this.context.viewport(0,0,e,s)}render(t=0){this.program_state.animation_delta_time=t-this.prev_time,this.program_state.animate&&(this.program_state.animation_time+=this.program_state.animation_delta_time),this.prev_time=t;const e=this.context;e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT);const s=[...this.scenes];for(;s.length;)s.push(...s[0].children),s.shift().display(this,this.program_state);this.event=window.requestAnimFrame(this.render.bind(this))}},i.Scene=class{constructor(){this.children=[];this.key_controls=new d(document,(t,e)=>{t(e),e.preventDefault(),e.stopPropagation()})}new_line(t=this.control_panel){t.appendChild(document.createElement("br"))}live_string(t,e=this.control_panel){e.appendChild(Object.assign(document.createElement("div"),{className:"live_string",onload:t}))}key_triggered_button(t,e,s,i="#"+Math.random().toString(9).slice(-6),n,o=this,r=this.control_panel){const a=r.appendChild(document.createElement("button"));a.default_color=a.style.backgroundColor=i;const h=()=>{Object.assign(a.style,{"background-color":"red","z-index":"1",transform:"scale(2)"}),s.call(o)},c=()=>{Object.assign(a.style,{"background-color":a.default_color,"z-index":"0",transform:"scale(1)"}),n&&n.call(o)},l=e.join("+").split(" ").join("Space");a.textContent="("+l+") "+t,a.addEventListener("mousedown",h),a.addEventListener("mouseup",c),a.addEventListener("touchstart",h,{passive:!0}),a.addEventListener("touchend",c,{passive:!0}),e&&this.key_controls.add(e,h,c)}display(t,e){}make_control_panel(){}show_explanation(t){}}},function(t,e,s){"use strict";s.r(e);var i=s(0);const{Scene:n,vec:o,vec3:r,vec4:a,Mat4:h}=i.a;class c extends n{constructor(){super();const t={roll:0,look_around_locked:!0,thrust:r(0,0,0),pos:r(0,0,0),z_axis:r(0,0,0),radians_per_frame:.005,meters_per_frame:20,speed_multiplier:1};Object.assign(this,t),this.mouse_enabled_canvases=new Set,this.will_take_over_graphics_state=!0}set_recipient(t,e){this.matrix=t,this.inverse=e}reset(t){this.set_recipient(()=>t.camera_transform,()=>t.camera_inverse)}add_mouse_controls(t){this.mouse={from_center:o(0,0)};const e=(e,s=t.getBoundingClientRect())=>o(e.clientX-(s.left+s.right)/2,e.clientY-(s.bottom+s.top)/2);document.addEventListener("mouseup",t=>{this.mouse.anchor=void 0}),t.addEventListener("mousedown",t=>{t.preventDefault(),this.mouse.anchor=e(t)}),t.addEventListener("mousemove",t=>{t.preventDefault(),this.mouse.from_center=e(t)}),t.addEventListener("mouseout",t=>{this.mouse.anchor||this.mouse.from_center.scale_by(0)})}show_explanation(t){}make_control_panel(){this.control_panel.innerHTML+="Click and drag the scene to <br> spin your viewpoint around it.<br>",this.key_triggered_button("Up",[" "],()=>this.thrust[1]=-1,void 0,()=>this.thrust[1]=0),this.key_triggered_button("Forward",["w"],()=>this.thrust[2]=1,void 0,()=>this.thrust[2]=0),this.new_line(),this.key_triggered_button("Left",["a"],()=>this.thrust[0]=1,void 0,()=>this.thrust[0]=0),this.key_triggered_button("Back",["s"],()=>this.thrust[2]=-1,void 0,()=>this.thrust[2]=0),this.key_triggered_button("Right",["d"],()=>this.thrust[0]=-1,void 0,()=>this.thrust[0]=0),this.new_line(),this.key_triggered_button("Down",["z"],()=>this.thrust[1]=1,void 0,()=>this.thrust[1]=0);const t=this.control_panel.appendChild(document.createElement("span"));t.style.margin="30px",this.key_triggered_button("-",["o"],()=>this.speed_multiplier/=1.2,"green",void 0,void 0,t),this.live_string(t=>{t.textContent="Speed: "+this.speed_multiplier.toFixed(2)},t),this.key_triggered_button("+",["p"],()=>this.speed_multiplier*=1.2,"green",void 0,void 0,t),this.new_line(),this.key_triggered_button("Roll left",[","],()=>this.roll=1,void 0,()=>this.roll=0),this.key_triggered_button("Roll right",["."],()=>this.roll=-1,void 0,()=>this.roll=0),this.new_line(),this.key_triggered_button("(Un)freeze mouse look around",["f"],()=>this.look_around_locked^=1,"green"),this.new_line(),this.live_string(t=>t.textContent="Position: "+this.pos[0].toFixed(2)+", "+this.pos[1].toFixed(2)+", "+this.pos[2].toFixed(2)),this.new_line(),this.live_string(t=>t.textContent="Facing: "+(this.z_axis[0]>0?"West ":"East ")+(this.z_axis[1]>0?"Down ":"Up ")+(this.z_axis[2]>0?"North":"South")),this.new_line(),this.key_triggered_button("Go to world origin",["r"],()=>{this.matrix().set_identity(4,4),this.inverse().set_identity(4,4)},"orange"),this.new_line(),this.key_triggered_button("Look at origin from front",["1"],()=>{this.inverse().set(h.look_at(r(0,0,10),r(0,0,0),r(0,1,0))),this.matrix().set(h.inverse(this.inverse()))},"black"),this.new_line(),this.key_triggered_button("from right",["2"],()=>{this.inverse().set(h.look_at(r(10,0,0),r(0,0,0),r(0,1,0))),this.matrix().set(h.inverse(this.inverse()))},"black"),this.key_triggered_button("from rear",["3"],()=>{this.inverse().set(h.look_at(r(0,0,-10),r(0,0,0),r(0,1,0))),this.matrix().set(h.inverse(this.inverse()))},"black"),this.key_triggered_button("from left",["4"],()=>{this.inverse().set(h.look_at(r(-10,0,0),r(0,0,0),r(0,1,0))),this.matrix().set(h.inverse(this.inverse()))},"black"),this.new_line(),this.key_triggered_button("Attach to global camera",["Shift","R"],()=>{this.will_take_over_graphics_state=!0},"blue"),this.new_line()}first_person_flyaround(t,e,s=70){const i={plus:[this.mouse.from_center[0]+s,this.mouse.from_center[1]+s],minus:[this.mouse.from_center[0]-s,this.mouse.from_center[1]-s]};if(!this.look_around_locked)for(let e=0;e<2;e++){let s=i,n=(s.minus[e]>0&&s.minus[e]||s.plus[e]<0&&s.plus[e])*t;this.matrix().post_multiply(h.rotation(-n,e,1-e,0)),this.inverse().pre_multiply(h.rotation(+n,e,1-e,0))}this.matrix().post_multiply(h.rotation(-.1*this.roll,0,0,1)),this.inverse().pre_multiply(h.rotation(.1*this.roll,0,0,1)),this.matrix().post_multiply(h.translation(...this.thrust.times(-e))),this.inverse().pre_multiply(h.translation(...this.thrust.times(+e)))}third_person_arcball(t){const e=this.mouse.from_center.minus(this.mouse.anchor);if(e.norm()<=0)return;this.matrix().post_multiply(h.translation(0,0,-25)),this.inverse().pre_multiply(h.translation(0,0,25));const s=h.rotation(t*e.norm(),e[1],e[0],0);this.matrix().post_multiply(s),this.inverse().pre_multiply(s),this.matrix().post_multiply(h.translation(0,0,25)),this.inverse().pre_multiply(h.translation(0,0,-25))}display(t,e,s=e.animation_delta_time/1e3){const i=this.speed_multiplier*this.meters_per_frame,n=this.speed_multiplier*this.radians_per_frame;this.will_take_over_graphics_state&&(this.reset(e),this.will_take_over_graphics_state=!1),this.mouse_enabled_canvases.has(t.canvas)||(this.add_mouse_controls(t.canvas),this.mouse_enabled_canvases.add(t.canvas)),this.first_person_flyaround(s*n,s*i),this.mouse.anchor&&this.third_person_arcball(s*n),this.pos=this.inverse().times(a(0,0,0,1)),this.z_axis=this.inverse().times(a(0,0,1,0))}}const{Shader:l,Matrix:d,color:u,vec4:p}=i.a;var m=class extends l{constructor(t=2){super(),this.num_lights=t}shared_glsl_code(){return" precision mediump float;\n        const int N_LIGHTS = "+this.num_lights+";\n        uniform float ambient, diffusivity, specularity, smoothness;\n        uniform vec4 light_positions_or_vectors[N_LIGHTS], light_colors[N_LIGHTS];\n        uniform float light_attenuation_factors[N_LIGHTS];\n        uniform vec4 shape_color;\n        uniform vec3 squared_scale, camera_center;\n\n                              // Specifier \"varying\" means a variable's final value will be passed from the vertex shader\n                              // on to the next phase (fragment shader), then interpolated per-fragment, weighted by the\n                              // pixel fragment's proximity to each of the 3 vertices (barycentric interpolation).\n        varying vec3 N, vertex_worldspace;\n                                             // ***** PHONG SHADING HAPPENS HERE: *****                                       \n        vec3 phong_model_lights( vec3 N, vec3 vertex_worldspace )\n          {                                        // phong_model_lights():  Add up the lights' contributions.\n            vec3 E = normalize( camera_center - vertex_worldspace );\n            vec3 result = vec3( 0.0 );\n            for(int i = 0; i < N_LIGHTS; i++)\n              {\n                            // Lights store homogeneous coords - either a position or vector.  If w is 0, the \n                            // light will appear directional (uniform direction from all points), and we \n                            // simply obtain a vector towards the light by directly using the stored value.\n                            // Otherwise if w is 1 it will appear as a point light -- compute the vector to \n                            // the point light's location from the current surface point.  In either case, \n                            // fade (attenuate) the light as the vector needed to reach it gets longer.  \n                vec3 surface_to_light_vector = light_positions_or_vectors[i].xyz - \n                                               light_positions_or_vectors[i].w * vertex_worldspace;                                             \n                float distance_to_light = length( surface_to_light_vector );\n\n                vec3 L = normalize( surface_to_light_vector );\n                vec3 H = normalize( L + E );\n                                                  // Compute the diffuse and specular components from the Phong\n                                                  // Reflection Model, using Blinn's \"halfway vector\" method:\n                float diffuse  =      max( dot( N, L ), 0.0 );\n                float specular = pow( max( dot( N, H ), 0.0 ), smoothness );\n                float attenuation = 1.0 / (1.0 + light_attenuation_factors[i] * distance_to_light * distance_to_light );\n                \n                \n                vec3 light_contribution = shape_color.xyz * light_colors[i].xyz * diffusivity * diffuse\n                                                          + light_colors[i].xyz * specularity * specular;\n\n                result += attenuation * light_contribution;\n              }\n            return result;\n          } "}vertex_glsl_code(){return this.shared_glsl_code()+"\n        attribute vec3 position, normal;                            // Position is expressed in object coordinates.\n        \n        uniform mat4 model_transform;\n        uniform mat4 projection_camera_model_transform;\n\n        void main()\n          {                                                                   // The vertex's final resting place (in NDCS):\n            gl_Position = projection_camera_model_transform * vec4( position, 1.0 );\n                                                                              // The final normal vector in screen space.\n            N = normalize( mat3( model_transform ) * normal / squared_scale);\n            \n            vertex_worldspace = ( model_transform * vec4( position, 1.0 ) ).xyz;\n          } "}fragment_glsl_code(){return this.shared_glsl_code()+"\n        void main()\n          {                                                           // Compute an initial (ambient) color:\n            gl_FragColor = vec4( shape_color.xyz * ambient, shape_color.w );\n                                                                     // Compute the final color with contributions from lights:\n            gl_FragColor.xyz += phong_model_lights( normalize( N ), vertex_worldspace );\n          } "}send_material(t,e,s){t.uniform4fv(e.shape_color,s.color),t.uniform1f(e.ambient,s.ambient),t.uniform1f(e.diffusivity,s.diffusivity),t.uniform1f(e.specularity,s.specularity),t.uniform1f(e.smoothness,s.smoothness)}send_gpu_state(t,e,s,i){const n=p(0,0,0,1),o=s.camera_transform.times(n).to3();t.uniform3fv(e.camera_center,o);const r=i.reduce((t,e)=>t.plus(p(...e).times_pairwise(e)),p(0,0,0,0)).to3();t.uniform3fv(e.squared_scale,r);const a=s.projection_transform.times(s.camera_inverse).times(i);if(t.uniformMatrix4fv(e.model_transform,!1,d.flatten_2D_to_1D(i.transposed())),t.uniformMatrix4fv(e.projection_camera_model_transform,!1,d.flatten_2D_to_1D(a.transposed())),!s.lights.length)return;const h=[],c=[];for(var l=0;l<4*s.lights.length;l++)h.push(s.lights[Math.floor(l/4)].position[l%4]),c.push(s.lights[Math.floor(l/4)].color[l%4]);t.uniform4fv(e.light_positions_or_vectors,h),t.uniform4fv(e.light_colors,c),t.uniform1fv(e.light_attenuation_factors,s.lights.map(t=>t.attenuation))}update_GPU(t,e,s,i,n){const o={color:u(0,0,0,1),ambient:0,diffusivity:1,specularity:1,smoothness:40};n=Object.assign({},o,n),this.send_material(t,e,n),this.send_gpu_state(t,e,s,i)}};const{Matrix:g,color:_}=i.a;var f=class extends m{constructor(t=2,e=_(0,0,0,1),s=.5){super(t),this.fogColor=e,this.fogFactor=s}send_material(t,e,s){super.send_material(t,e,s)}send_gpu_state(t,e,s,i){super.send_gpu_state(t,e,s,i),t.uniformMatrix4fv(e.camera_transform,!1,g.flatten_2D_to_1D(s.camera_inverse.transposed()))}update_GPU(t,e,s,i,n){super.update_GPU(t,e,s,i,n),t.uniform1f(e.fogFactor,this.fogFactor),t.uniform4fv(e.fogColor,this.fogColor)}vertex_glsl_code(){return this.shared_glsl_code()+"\n      attribute vec3 position, normal; // Position is expressed in object coordinates.\n      \n      uniform mat4 model_transform;\n      uniform mat4 projection_camera_model_transform;\n      uniform mat4 camera_transform;\n\n      varying float camera_depth;\n\n      void main() {  \n        // The vertex's final resting place (in NDCS):\n        gl_Position = projection_camera_model_transform * vec4(position, 1.0);\n        camera_depth = -1.0 * (camera_transform * model_transform * vec4(position, 1)).z;\n        \n        // The final normal vector in screen space.\n        N = normalize(mat3(model_transform) * normal / squared_scale);\n        \n        vertex_worldspace = (model_transform * vec4(position, 1.0)).xyz;\n      } \n    "}fragment_glsl_code(){return this.shared_glsl_code()+"\n      varying float camera_depth;\n\n      uniform float fogFactor;\n      uniform vec4 fogColor;\n\n      void main(){\n        float fogIntensity = 1.0 - smoothstep(0.0, 1.0, (fogFactor * camera_depth) / 25.0);\n        gl_FragColor = vec4(shape_color.xyz * ambient, shape_color.w);\n        gl_FragColor.xyz += phong_model_lights(normalize(N), vertex_worldspace);\n        gl_FragColor = mix(fogColor, gl_FragColor, fogIntensity);\n      }\n    "}};const{Shape:b,Vector:v,vec3:y}=i.a;var x=class extends b{constructor(){super("position","normal","texture_coord"),this.arrays.position=[y(-.5,0,.1),y(0,0,0),y(0,.866,0),y(.5,0,.1)],this.arrays.normal=[y(0,0,1),y(0,0,1),y(0,0,1),y(0,0,1)],this.indices=[0,1,2,1,3,2]}};const{Shape:w,vec3:k}=i.a;var S=class extends w{constructor(t={}){const{columnDivisions:e=6,rowDivisions:s=6,bumpiness:i=1,colNoiseFactor:n=.5,rowNoiseFactor:o=.5}=t;super("position","normal");const r=this.subdivideNegOneToOne(e),a=this.subdivideNegOneToOne(s).reverse().map(t=>r.map(r=>{const a=1===r||-1===r?0:this.generateNoise(e,n),h=1===t||-1===t?0:this.generateNoise(s,o);return[r+a,t+h,Math.random()*i]})),h=[],c=[];for(let t=0;t<e;t++)for(let e=0;e<s;e++){h.push(k(...a[e][t+1]),k(...a[e][t]),k(...a[e+1][t]));const s=this.getNormalFromTopOfVertexList(h);c.push(s,s,s),h.push(k(...a[e+1][t]),k(...a[e+1][t+1]),k(...a[e][t+1]));const i=this.getNormalFromTopOfVertexList(h);c.push(i,i,i)}this.arrays.position=h,this.arrays.normal=c}generateNoise(t,e){return(1/t*2*Math.random()-1/t)*e}subdivideNegOneToOne(t){const e=[...Array(t)].map((e,s)=>2/t*s-1);return e.push(1),e}getNormalFromTopOfVertexList(t){const e=t[t.length-3].minus(t[t.length-2]),s=t[t.length-2].minus(t[t.length-1]);return e.cross(s).normalized()}};const{Shape:E,vec:C,Vector:M,Vector3:T}=i.a;var O=class extends E{constructor(t){super("position","normal","texture_coord");this.arrays.position=T.cast([0,0,-1],[0,.9428,.3333],[-.8165,-.4714,.3333],[.8165,-.4714,.3333]),this.subdivide_triangle(0,1,2,t),this.subdivide_triangle(3,2,1,t),this.subdivide_triangle(1,0,3,t),this.subdivide_triangle(0,2,3,t);for(let t of this.arrays.position)this.arrays.normal.push(t.copy()),this.arrays.texture_coord.push(M.of(.5-Math.atan2(t[2],t[0])/(2*Math.PI),.5+Math.asin(t[1])/Math.PI));const e=this.arrays.texture_coord;for(let t=0;t<this.indices.length;t+=3){const s=this.indices[t],i=this.indices[t+1],n=this.indices[t+2];if([[s,i],[s,n],[i,n]].some(t=>Math.abs(e[t[0]][0]-e[t[1]][0])>.5)&&[s,i,n].some(t=>e[t][0]<.5))for(let o of[[s,t],[i,t+1],[n,t+2]])e[o[0]][0]<.5&&(this.indices[o[1]]=this.arrays.position.length,this.arrays.position.push(this.arrays.position[o[0]].copy()),this.arrays.normal.push(this.arrays.normal[o[0]].copy()),e.push(e[o[0]].plus(C(1,0))))}}subdivide_triangle(t,e,s,i){if(i<=0)this.indices.push(t,e,s);else{var n=this.arrays.position[t].mix(this.arrays.position[e],.5).normalized(),o=this.arrays.position[t].mix(this.arrays.position[s],.5).normalized(),r=this.arrays.position[e].mix(this.arrays.position[s],.5).normalized(),a=this.arrays.position.push(n)-1,h=this.arrays.position.push(o)-1,c=this.arrays.position.push(r)-1;this.subdivide_triangle(t,a,h,i-1),this.subdivide_triangle(a,e,c,i-1),this.subdivide_triangle(h,c,s,i-1),this.subdivide_triangle(a,c,h,i-1)}}};const{Shape:R,Vector:L,Vector3:F}=i.a;var A=class extends R{constructor(){super("position","normal","texture_coord"),this.arrays.position=F.cast([-1,-1,0],[1,-1,0],[-1,1,0],[1,1,0]),this.arrays.normal=F.cast([0,0,1],[0,0,1],[0,0,1],[0,0,1]),this.arrays.texture_coord=L.cast([0,0],[1,0],[0,1],[1,1]),this.indices.push(0,1,2,1,3,2)}};const{Shape:N,Mat4:z}=i.a;var D=class extends N{constructor(){super("position","normal","texture_coord");for(var t=0;t<3;t++)for(var e=0;e<2;e++){var s=z.rotation(0==t?Math.PI/2:0,1,0,0).times(z.rotation(Math.PI*e-(1==t?Math.PI/2:0),0,1,0)).times(z.translation(0,0,1));A.insert_transformed_copy_into(this,[],s)}}};const{Shape:P,Vector3:j,vec3:I}=i.a;var B=class extends P{constructor(t=.5,e=!0){super("position","normal"),this.arrays.position=j.cast([-1,0,0],[-.55,0,1],I(-1,1,0).mix(I(0,1,0),t),[-.55,0,1],I(-.55,1,1).mix(I(0,1,0),t),I(-1,1,0).mix(I(0,1,0),t),[-.55,0,1],[.55,0,1],I(-.55,1,1).mix(I(0,1,0),t),[.55,0,1],I(.55,1,1).mix(I(0,1,0),t),I(-.55,1,1).mix(I(0,1,0),t),[.55,0,1],[1,0,0],I(.55,1,1).mix(I(0,1,0),t),[1,0,0],I(1,1,0).mix(I(0,1,0),t),I(.55,1,1).mix(I(0,1,0),t),[1,0,0],[.55,0,-1],I(1,1,0).mix(I(0,1,0),t),[.55,0,-1],I(.55,1,-1).mix(I(0,1,0),t),I(1,1,0).mix(I(0,1,0),t),[.55,0,-1],[-.55,0,-1],I(.55,1,-1).mix(I(0,1,0),t),[-.55,0,-1],I(-.55,1,-1).mix(I(0,1,0),t),I(.55,1,-1).mix(I(0,1,0),t),[-.55,0,-1],[-1,0,0],I(-.55,1,-1).mix(I(0,1,0),t),[-1,0,0],I(-1,1,0).mix(I(0,1,0),t),I(-.55,1,-1).mix(I(0,1,0),t)),this.arrays.normal=e?j.cast([-1,0,0],[-.55,0,1],[-1,0,0],[-.55,0,1],[-.55,0,1],[-1,0,0],[-.55,0,1],[.55,0,1],[-.55,0,1],[.55,0,1],[.55,0,1],[-.55,0,1],[.55,0,1],[1,0,0],[.55,0,1],[1,0,0],[1,0,0],[.55,0,1],[1,0,0],[.55,0,-1],[1,0,0],[.55,0,-1],[.55,0,-1],[1,0,0],[.55,0,-1],[-.55,0,-1],[.55,0,-1],[-.55,0,-1],[-.55,0,-1],[.55,0,-1],[-.55,0,-1],[-1,0,0],[-.55,0,-1],[-1,0,0],[-1,0,0],[-.55,0,-1]):j.cast([-.8,0,.45],[-.8,0,.45],[-.8,0,.45],[-.8,0,.45],[-.8,0,.45],[-.8,0,.45],[0,0,1],[0,0,1],[0,0,1],[0,0,1],[0,0,1],[0,0,1],[.8,0,.45],[.8,0,.45],[.8,0,.45],[.8,0,.45],[.8,0,.45],[.8,0,.45],[.8,0,-.45],[.8,0,-.45],[.8,0,-.45],[.8,0,-.45],[.8,0,-.45],[.8,0,-.45],[0,0,-1],[0,0,-1],[0,0,-1],[0,0,-1],[0,0,-1],[0,0,-1],[-.8,0,-.45],[-.8,0,-.45],[-.8,0,-.45],[-.8,0,-.45],[-.8,0,-.45],[-.8,0,-.45]),this.arrays.normal=this.arrays.normal.map(t=>t.normalized())}};const{vec3:U,Mat4:G}=i.a;function q(t,e,s,i){this.rootPosition=t,this.directionVector=e,this.height=s,this.radius=i}function H(t,e){return t+Math.random()*(e-t)}var V=class{constructor(t={}){const{initialDirectionVector:e=U(0,1,0),baseLength:s=6,baseRadius:i=1,cutoffThreshold:n=1,leafThreshold:o=3,lengthDecayRate:r=.9,radiusDecayRate:a=.5,minSplitAngle:h=Math.PI/6,maxSplitAngle:c=Math.PI/3,branchLengthLowerBoundFactor:l=.75,extraTrunkLength:d=4}=t;Object.assign(this,{initialDirectionVector:e,baseLength:s,baseRadius:i,cutoffThreshold:n,leafThreshold:o,lengthDecayRate:r,radiusDecayRate:a,minSplitAngle:h,maxSplitAngle:c,branchLengthLowerBoundFactor:l,extraTrunkLength:d})}updateParameters(t={}){Object.assign(this,t)}generateTree(){this.branches=[],this.leafPositions=[];const t=U(0,0,0),e=H(this.baseLength*this.branchLengthLowerBoundFactor,this.baseLength),s=new q(t,this.initialDirectionVector,e+this.extraTrunkLength,this.baseRadius);this.branches.push(s);const i=t.plus(this.initialDirectionVector.times(e+this.extraTrunkLength));return this.__createBranches(i,this.initialDirectionVector,e*this.lengthDecayRate,this.baseRadius*this.radiusDecayRate),{branches:this.branches,leaves:this.leafPositions}}__createBranches(t,e,s,i){if(s<this.cutoffThreshold)return void this.leafPositions.push(t);s<this.leafThreshold&&this.leafPositions.push(t);const n=function(t){const e=U(Math.random(),Math.random(),Math.random());return t.cross(e).normalized()}(e).times(Math.random()),o=G.rotation(H(this.minSplitAngle,this.maxSplitAngle),...n).times(e).to3().normalized(),r=G.rotation(H(-this.maxSplitAngle,-this.minSplitAngle),...n).times(e).to3().normalized(),a=H(s*this.branchLengthLowerBoundFactor,s),h=H(s*this.branchLengthLowerBoundFactor,s);this.branches.push(new q(t,o,a,i)),this.branches.push(new q(t,r,h,i));const c=t.plus(o.times(a)),l=t.plus(r.times(h));this.__createBranches(c,o,a*this.lengthDecayRate,i*this.radiusDecayRate),this.__createBranches(l,r,h*this.lengthDecayRate,i*this.radiusDecayRate)}};const{Scene:$,vec3:W,Mat4:Y,Material:X,color:K,Light:J,vec4:Q}=i.a;function Z(t,e,s){return t+(e-t)*s}function tt(t,e,s=.5){return[Z(t[0],e[0],s),Z(t[1],e[1],s),Z(t[2],e[2],s),Z(t[3],e[3],s)]}function et(t){const e=function(t,e=1,s=-1){return Math.max(s,Math.min(e,t))}(t);if(.4<=e&&e<=1){return tt([248/255,177/255,149/255,1],[240/255,248/255,1,1],(e-.4)/.6)}if(.2<=e&&e<.4){return tt([246/255,114/255,128/255,1],[248/255,177/255,149/255,1],(e-.2)/.2)}if(.1<=e&&e<.2){return tt([192/255,108/255,132/255,1],[246/255,114/255,128/255,1],(e-.1)/.1)}if(-.1<=e&&e<.1){return tt([108/255,91/255,123/255,1],[192/255,108/255,132/255,1],(e+.1)/.2)}if(-.2<=e&&e<-.1){return tt([53/255,92/255,125/255,1],[108/255,91/255,123/255,1],(e+.2)/.1)}if(-1<=e&&e<-.2){return tt([25/255,25/255,50/255,1],[53/255,92/255,125/255,1],(e+1)/.8)}return[0,0,0,1]}function st(t,e){return t+Math.random()*(e-t)}e.default=class extends ${constructor(){super(),this.widget_options={make_controls:!0,make_code_nav:!1,make_editor:!1,show_explanation:!1},this.settings={fogColor:[240/255,248/255,1,1],fogIntensity:.3,groundColor:[.5,.6,.4,1],groundOptions:{columnDivisions:20,rowDivisions:15,bumpiness:.05,rowNoiseFactor:.7,colNoiseFactor:.7},mountainColor:[.1,.1,.1,1],mountainOptions:{columnDivisions:10,rowDivisions:10,bumpiness:.25,rowNoiseFactor:.7,colNoiseFactor:.7},sunColor:[1,1,1,1],sunlightColor:[1,244/255,229/255,1],moonColor:[1,244/255,229/255,1],moonlightColor:[.7,.7,1,1],rotationsPerMinute:1,initialSunOffset:11*Math.PI/8,leafOptions:{numberOfLeaves:10,initialReleaseInterval:1,releaseIntervalNoiseRange:[0,.25],baseVelocity:[0,1,7],noiseRange:{x:[0,1],y:[0,1],z:[-1,1]},sizeRange:[.5,1.2],colorRange:{r:[0,.6],g:[.3,.6],b:[0,.5],a:[.5,1]},baseRotationSpeed:.01,rotationNoiseRange:[0,.05],decaySpeed:.01,removalThreshold:.05},treeOptions:{initialDirectionVector:W(0,1,0),baseLength:6,baseRadius:1.5,cutoffThreshold:1.1,leafThreshold:2,lengthDecayRate:.9,radiusDecayRate:.5,minSplitAngle:0,maxSplitAngle:Math.PI/2.5,branchLengthLowerBoundFactor:.75,extraTrunkLength:2,useSmoothShading:!0}},this.shapes={leaf:new x,sphere:new O(4),cube:new D,offsetSquare:new S(this.settings.groundOptions),offsetSquare2:new S(this.settings.mountainOptions),treebark:new B(1-this.settings.treeOptions.radiusDecayRate,this.settings.treeOptions.useSmoothShading)},this.shaders={phongWithFog:new f(2,K(...this.settings.fogColor),this.settings.fogIntensity),phong:new m(2)},this.materials={ground:new X(this.shaders.phongWithFog,{ambient:0,diffusivity:.7,specularity:.2,color:K(...this.settings.groundColor)}),mountain:new X(this.shaders.phongWithFog,{ambient:0,diffusivity:.9,specularity:.2,color:[.1,.1,.1,1]}),metal:new X(this.shaders.phongWithFog,{ambient:0,diffusivity:.2,specularity:.95,color:K(.4,.4,.6,1)}),sun:new X(this.shaders.phong,{ambient:1,diffusivity:1,specularity:0,color:K(...this.settings.sunColor)}),moon:new X(this.shaders.phong,{ambient:1,diffusivity:1,specularity:0,color:K(...this.settings.moonColor)}),leaf:new X(this.shaders.phongWithFog,{ambient:.5,specularity:0}),tree:new X(this.shaders.phongWithFog,{ambient:.3,diffusivity:.3,specularity:.01,color:K(.59,.29,0,1)})},this.positions={sun:[0,0,0,1],moon:[0,0,0,1]},this.particles={leaves:[]};const t=new V(this.settings.treeOptions).generateTree();this.branches=t.branches,this.leaves=t.leaves.map(t=>{const e=this.generateLeaf(!0);return e.position=[...t],e}),this.initialized=!1}generateLeaf(t=!1){const{baseVelocity:e,noiseRange:s,sizeRange:i,colorRange:n}=this.settings.leafOptions;return t?{position:[0,0,0,1],size:st(...i),rotation:[st(0,2*Math.PI),Math.random(),Math.random(),Math.random()],color:[st(...n.r),st(...n.g),st(...n.b),st(...n.a)]}:{position:[...this.leaves[Math.round(st(0,this.leaves.length-1))].position,1],size:st(...i),rotation:[st(0,2*Math.PI),Math.random(),Math.random(),Math.random()],color:[st(...n.r),st(...n.g),st(...n.b),st(...n.a)],velocity:[(e[0]+st(...s.x))/100,(e[1]+st(...s.y))/100,(e[2]+st(...s.z))/100]}}initializeScene(t,e){e.lights=[new J(Q(...this.positions.sun),K(...this.settings.sunlightColor),1e9),new J(Q(...this.positions.sun),K(...this.settings.moonlightColor),1e7)],t.context.clearColor(...this.settings.fogColor),t.scratchpad.controls||(t.scratchpad.controls=new c,this.children.push(t.scratchpad.controls),e.set_camera(Y.look_at(W(-35,10,0),W(50,15,-20),W(0,1,0)))),e.projection_transform=Y.perspective(Math.PI/4,t.width/t.height,1,200),this.particles.leaves=[...Array(this.settings.leafOptions.numberOfLeaves)],this.particles.leaves.forEach((t,e)=>{const{initialReleaseInterval:s,releaseIntervalNoiseRange:i}=this.settings.leafOptions;setTimeout(()=>this.particles.leaves[e]=this.generateLeaf(),e*s*1e3+1e3*st(...i))}),t.context.enable(t.context.CULL_FACE),t.context.cullFace(t.context.BACK),this.initialized=!0}updateTerrain(t,e){const s=Y.identity().times(Y.scale(60,60,60)).times(Y.rotation(-Math.PI/2,1,0,0));this.shapes.offsetSquare.draw(t,e,s,this.materials.ground);const i=Y.identity().times(Y.translation(-50,10,-30)).times(Y.scale(60,60,60)).times(Y.rotation(Math.PI/4,0,1,0)).times(Y.rotation(-Math.PI/3,1,0,0));this.shapes.offsetSquare2.draw(t,e,i,this.materials.mountain)}updateSun(t,e){const s=Math.max(1e5,1e7*this.positions.sun[1]);e.lights[0]=new J(Q(...this.positions.sun),K(...this.settings.sunlightColor),s);const i=Y.identity().times(Y.rotation(this.settings.initialSunOffset+2*Math.PI*(e.animation_time/1e3)*(this.settings.rotationsPerMinute/60),1,0,1)).times(Y.translation(0,75,0)).times(Y.scale(2,2,2));this.positions.sun=[...i.times(Q(0,0,0,1))],this.shapes.sphere.draw(t,e,i,this.materials.sun)}updateMoon(t,e){const s=Math.max(1e5,1e5*this.positions.moon[1]);e.lights[1]=new J(Q(...this.positions.moon),K(...this.settings.moonlightColor),s);const i=Y.identity().times(Y.rotation(this.settings.initialSunOffset+2*Math.PI*(e.animation_time/1e3)*(this.settings.rotationsPerMinute/60),1,0,1)).times(Y.translation(0,-75,0)).times(Y.scale(1,1,1));this.positions.moon=[...i.times(Q(0,0,0,1))],this.shapes.sphere.draw(t,e,i,this.materials.moon)}updateSky(t,e){const s=et(this.positions.sun[1]/50);this.materials.ground.shader.fogColor=K(...s),this.materials.ground.specularity=Math.max(0,this.positions.sun[1]/50)/2,this.materials.mountain.specularity=Math.max(0,this.positions.sun[1]/50)/2,this.materials.metal.specularity=Math.max(0,this.positions.sun[1]/50)/2,this.materials.ground.ambient=Math.max(.1,this.positions.sun[1]/50)/2,this.materials.mountain.ambient=Math.max(.1,this.positions.sun[1]/50)/2,this.materials.metal.ambient=Math.max(.1,this.positions.sun[1]/50)/2,this.materials.tree.ambient=Math.max(.1,this.positions.sun[1]/50)/2,t.context.clearColor(...s)}updateFlyingLeaves(t,e){for(let s=0;s<this.particles.leaves.length;s++){const i=this.particles.leaves[s];if(null==i)continue;const{baseRotationSpeed:n,rotationNoiseRange:o,decaySpeed:r,removalThreshold:a}=this.settings.leafOptions;i.size<=a&&(this.particles.leaves[s]=this.generateLeaf()),i.position[0]+=i.velocity[0],i.position[1]+=i.velocity[1],i.position[2]+=i.velocity[2],i.size=Z(i.size,0,r),i.rotation[0]+=n+st(...o);const h=Y.translation(...i.position).times(Y.scale(i.size,i.size,i.size)).times(Y.rotation(...i.rotation));t.context.disable(t.context.CULL_FACE),this.shapes.leaf.draw(t,e,h,this.materials.leaf.override({color:i.color})),t.context.enable(t.context.CULL_FACE)}}updateTree(t,e){for(const s of this.branches){const i=s.directionVector.normalized(),n=i.cross(W(0,1,0)),o=i.equals(W(0,1,0))?Y.rotation(0,0,1,0):Y.rotation(-Math.acos(i.dot(W(0,1,0))),...n),r=Y.identity().times(Y.translation(...s.rootPosition)).times(o).times(Y.scale(s.radius,s.height,s.radius));this.shapes.treebark.draw(t,e,r,this.materials.tree.override({color:K(.6,.3,.45,1)}))}for(const s of this.leaves){const i=Y.translation(...s.position).times(Y.scale(s.size,s.size,s.size)).times(Y.rotation(...s.rotation));t.context.disable(t.context.CULL_FACE),this.shapes.leaf.draw(t,e,i,this.materials.leaf.override({color:s.color})),t.context.enable(t.context.CULL_FACE)}}display(t,e){this.initialized||this.initializeScene(t,e),this.updateSun(t,e),this.updateMoon(t,e),this.updateTerrain(t,e),this.updateSky(t,e),this.updateFlyingLeaves(t,e),this.updateTree(t,e)}make_control_panel(){this.live_string(t=>{t.textContent=`Day/night cycles per minute: ${this.settings.rotationsPerMinute.toFixed(3)}`}),this.new_line(),this.key_triggered_button("Increase day/night speed",[""],()=>this.settings.rotationsPerMinute+=.1),this.key_triggered_button("Decrease day/night speed",[""],()=>this.settings.rotationsPerMinute-=.1),this.new_line(),this.live_string(t=>{t.textContent=`Ground Bumpiness: ${this.settings.groundOptions.bumpiness.toFixed(3)}`}),this.new_line(),this.live_string(t=>{t.textContent=`\n        Row Divisions: ${this.settings.groundOptions.rowDivisions.toFixed(3)}\n        | Column Divisions: ${this.settings.groundOptions.columnDivisions.toFixed(3)}\n        | Row Noise: ${this.settings.groundOptions.rowNoiseFactor.toFixed(3)}\n        | Column Noise: ${this.settings.groundOptions.colNoiseFactor.toFixed(3)}\n      `}),this.new_line(),this.key_triggered_button("Generate new ground",[""],()=>{this.shapes.offsetSquare=new S(this.settings.groundOptions)}),this.key_triggered_button("(+) Bumpiness",[""],()=>{this.settings.groundOptions.bumpiness+=.01}),this.key_triggered_button("(-) Bumpiness",[""],()=>{this.settings.groundOptions.bumpiness-=.01}),this.key_triggered_button("(+) Row Divisions",[""],()=>{this.settings.groundOptions.rowDivisions+=1}),this.key_triggered_button("(-) Row Divisions",[""],()=>{this.settings.groundOptions.rowDivisions-=1}),this.key_triggered_button("(+) Column Divisions",[""],()=>{this.settings.groundOptions.columnDivisions+=1}),this.key_triggered_button("(-) Column Divisions",[""],()=>{this.settings.groundOptions.columnDivisions-=1}),this.key_triggered_button("(+) Row Noise",[""],()=>{this.settings.groundOptions.rowNoiseFactor+=.01}),this.key_triggered_button("(-) Row Noise",[""],()=>{this.settings.groundOptions.rowNoiseFactor-=.01}),this.key_triggered_button("(+) Column Noise",[""],()=>{this.settings.groundOptions.colNoiseFactor+=.01}),this.key_triggered_button("(-) Column Noise",[""],()=>{this.settings.groundOptions.colNoiseFactor-=.01}),this.key_triggered_button("Generate new mountain",[""],()=>{this.shapes.offsetSquare2=new S(this.settings.mountainOptions)}),this.new_line(),this.live_string(t=>{t.textContent=`\n      Base Length: ${this.settings.treeOptions.baseLength.toFixed(3)}\n      | Base Radius: ${this.settings.treeOptions.baseRadius.toFixed(3)}\n      | Cutoff Threshold: ${this.settings.treeOptions.cutoffThreshold.toFixed(3)}\n      | Leaf Threshold: ${this.settings.treeOptions.leafThreshold.toFixed(3)}\n    `}),this.new_line(),this.live_string(t=>{t.textContent=`\n      Branch Length Decay Factor: ${this.settings.treeOptions.lengthDecayRate.toFixed(3)}\n      | Radius Decay Factor: ${this.settings.treeOptions.radiusDecayRate.toFixed(3)}\n      | Leaf Size Lower Range: ${this.settings.leafOptions.sizeRange[0].toFixed(3)}\n    `}),this.new_line(),this.live_string(t=>{t.textContent=`\n      Leaf Size Upper Range: ${this.settings.leafOptions.sizeRange[1].toFixed(3)}\n      | Extra Base Length: ${this.settings.treeOptions.extraTrunkLength.toFixed(3)}\n      | Min Angle: ${this.settings.treeOptions.minSplitAngle.toFixed(3)}\n      | Max Angle: ${this.settings.treeOptions.maxSplitAngle.toFixed(3)}\n    `}),this.new_line(),this.key_triggered_button("(+) Base Length",[""],()=>{this.settings.treeOptions.baseLength+=.1}),this.key_triggered_button("(-) Base Length",[""],()=>{this.settings.treeOptions.baseLength-=.1}),this.key_triggered_button("(+) Base Radius",[""],()=>{this.settings.treeOptions.baseRadius+=.1}),this.key_triggered_button("(-) Base Radius",[""],()=>{this.settings.treeOptions.baseRadius-=.1}),this.new_line(),this.key_triggered_button("(+) Cutoff",[""],()=>{this.settings.treeOptions.cutoffThreshold+=.05}),this.key_triggered_button("(-) Cutoff",[""],()=>{this.settings.treeOptions.cutoffThreshold-=.05,this.settings.treeOptions.cutoffThreshold<.75&&!this.gaveAlert&&(alert("Warning: low cutoff values may cause lag or page crashes!"),this.gaveAlert=!0)}),this.key_triggered_button("(+) Leaf Threshold",[""],()=>{this.settings.treeOptions.leafThreshold+=.1}),this.key_triggered_button("(-) Leaf Threshold",[""],()=>{this.settings.treeOptions.leafThreshold-=.1}),this.key_triggered_button("(+) Leaf Size",[""],()=>{this.settings.leafOptions.sizeRange[0]+=.1,this.settings.leafOptions.sizeRange[1]+=.1}),this.key_triggered_button("(-) Leaf Size",[""],()=>{this.settings.leafOptions.sizeRange[0]-=.1,this.settings.leafOptions.sizeRange[1]-=.1}),this.key_triggered_button("(+) Min Angle",[""],()=>{this.settings.treeOptions.minSplitAngle+=Math.PI/32}),this.key_triggered_button("(-) Min Angle",[""],()=>{this.settings.treeOptions.minSplitAngle-=Math.PI/32}),this.key_triggered_button("(+) Max Angle",[""],()=>{this.settings.treeOptions.maxSplitAngle+=Math.PI/32}),this.key_triggered_button("(-) Max Angle",[""],()=>{this.settings.treeOptions.maxSplitAngle-=Math.PI/32}),this.new_line(),this.key_triggered_button("Generate new tree",[""],()=>{const t=new V(this.settings.treeOptions).generateTree();this.branches=t.branches,this.leaves=t.leaves.map(t=>{const e=this.generateLeaf(!0);return e.position=[...t],e})}),this.key_triggered_button("Toggle tree shading",[""],()=>{this.settings.treeOptions.useSmoothShading=!this.settings.treeOptions.useSmoothShading,this.shapes.treebark=new B(1-this.settings.treeOptions.radiusDecayRate,this.settings.treeOptions.useSmoothShading)})}}},function(t,e,s){var i=s(3),n=s(4);"string"==typeof(n=n.__esModule?n.default:n)&&(n=[[t.i,n,""]]);var o={insert:"head",singleton:!1},r=(i(n,o),n.locals?n.locals:{});t.exports=r},function(t,e,s){"use strict";var i,n=function(){return void 0===i&&(i=Boolean(window&&document&&document.all&&!window.atob)),i},o=function(){var t={};return function(e){if(void 0===t[e]){var s=document.querySelector(e);if(window.HTMLIFrameElement&&s instanceof window.HTMLIFrameElement)try{s=s.contentDocument.head}catch(t){s=null}t[e]=s}return t[e]}}(),r=[];function a(t){for(var e=-1,s=0;s<r.length;s++)if(r[s].identifier===t){e=s;break}return e}function h(t,e){for(var s={},i=[],n=0;n<t.length;n++){var o=t[n],h=e.base?o[0]+e.base:o[0],c=s[h]||0,l="".concat(h," ").concat(c);s[h]=c+1;var d=a(l),u={css:o[1],media:o[2],sourceMap:o[3]};-1!==d?(r[d].references++,r[d].updater(u)):r.push({identifier:l,updater:_(u,e),references:1}),i.push(l)}return i}function c(t){var e=document.createElement("style"),i=t.attributes||{};if(void 0===i.nonce){var n=s.nc;n&&(i.nonce=n)}if(Object.keys(i).forEach((function(t){e.setAttribute(t,i[t])})),"function"==typeof t.insert)t.insert(e);else{var r=o(t.insert||"head");if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(e)}return e}var l,d=(l=[],function(t,e){return l[t]=e,l.filter(Boolean).join("\n")});function u(t,e,s,i){var n=s?"":i.media?"@media ".concat(i.media," {").concat(i.css,"}"):i.css;if(t.styleSheet)t.styleSheet.cssText=d(e,n);else{var o=document.createTextNode(n),r=t.childNodes;r[e]&&t.removeChild(r[e]),r.length?t.insertBefore(o,r[e]):t.appendChild(o)}}function p(t,e,s){var i=s.css,n=s.media,o=s.sourceMap;if(n?t.setAttribute("media",n):t.removeAttribute("media"),o&&btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleSheet)t.styleSheet.cssText=i;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(i))}}var m=null,g=0;function _(t,e){var s,i,n;if(e.singleton){var o=g++;s=m||(m=c(e)),i=u.bind(null,s,o,!1),n=u.bind(null,s,o,!0)}else s=c(e),i=p.bind(null,s,e),n=function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(s)};return i(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;i(t=e)}else n()}}t.exports=function(t,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=n());var s=h(t=t||[],e);return function(t){if(t=t||[],"[object Array]"===Object.prototype.toString.call(t)){for(var i=0;i<s.length;i++){var n=a(s[i]);r[n].references--}for(var o=h(t,e),c=0;c<s.length;c++){var l=a(s[c]);0===r[l].references&&(r[l].updater(),r.splice(l,1))}s=o}}}},function(t,e,s){(e=s(5)(!1)).push([t.i,"* {\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nbody {\r\n  background: #eee;\r\n}\r\n\r\n.container {\r\n  margin: 50px auto;\r\n  display: flex;\r\n  justify-content: center;\r\n}",""]),t.exports=e},function(t,e,s){"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var s=function(t,e){var s=t[1]||"",i=t[3];if(!i)return s;if(e&&"function"==typeof btoa){var n=(r=i,a=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),h="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),"/*# ".concat(h," */")),o=i.sources.map((function(t){return"/*# sourceURL=".concat(i.sourceRoot||"").concat(t," */")}));return[s].concat(o).concat([n]).join("\n")}var r,a,h;return[s].join("\n")}(e,t);return e[2]?"@media ".concat(e[2]," {").concat(s,"}"):s})).join("")},e.i=function(t,s,i){"string"==typeof t&&(t=[[null,t,""]]);var n={};if(i)for(var o=0;o<this.length;o++){var r=this[o][0];null!=r&&(n[r]=!0)}for(var a=0;a<t.length;a++){var h=[].concat(t[a]);i&&n[h[0]]||(s&&(h[2]?h[2]="".concat(s," and ").concat(h[2]):h[2]=s),e.push(h))}},e}},function(t,e,s){"use strict";s.r(e);var i=s(0);const{color:n,Scene:o}=i.a,r={},a=(r.Canvas_Widget=class{constructor(t,e,s={}){this.element=t;e&&e[0]&&Object.assign(s,e[0].widget_options),Object.assign(this,{show_canvas:!0,make_controls:!0,show_explanation:!0,make_editor:!1,make_code_nav:!0},s);const o=[".canvas-widget { width: 1080px; background: DimGray; margin:auto }",".canvas-widget canvas { width: 1080px; height: 600px; margin-bottom:-3px }"];0==document.styleSheets.length&&document.head.appendChild(document.createElement("style"));for(const t of o)document.styleSheets[document.styleSheets.length-1].insertRule(t,0);this.show_explanation&&(this.embedded_explanation_area=this.element.appendChild(document.createElement("div")),this.embedded_explanation_area.className="text-widget");const r=this.element.appendChild(document.createElement("canvas"));this.make_controls&&(this.embedded_controls_area=this.element.appendChild(document.createElement("div")),this.embedded_controls_area.className="controls-widget"),this.make_code_nav&&(this.embedded_code_nav_area=this.element.appendChild(document.createElement("div")),this.embedded_code_nav_area.className="code-widget"),this.make_editor&&(this.embedded_editor_area=this.element.appendChild(document.createElement("div")),this.embedded_editor_area.className="editor-widget"),this.show_canvas||(r.style.display="none"),this.webgl_manager=new i.a.Webgl_Manager(r,n(0,0,0,1)),e&&this.webgl_manager.scenes.push(...e);const h=e?e[0]:void 0,u=e?e.slice(1):[],p=h?h.constructor:void 0;this.show_explanation&&(this.embedded_explanation=new d(this.embedded_explanation_area,this.webgl_manager.scenes,this.webgl_manager)),this.make_controls&&(this.embedded_controls=new a(this.embedded_controls_area,this.webgl_manager.scenes)),this.make_editor&&(this.embedded_editor=new l(this.embedded_editor_area,p,this)),this.make_code_nav&&(this.embedded_code_nav=new c(this.embedded_code_nav_area,p,u,{associated_editor:this.embedded_editor})),this.webgl_manager.render()}},r.Controls_Widget=class{constructor(t,e){const s=[".controls-widget * { font-family: monospace }",".controls-widget div { background: white }",".controls-widget table { border-collapse: collapse; display:block; overflow-x: auto; }",".controls-widget table.control-box { width: 1080px; border:0; margin:0; max-height:380px; transition:.5s; overflow-y:scroll; background:DimGray }",".controls-widget table.control-box:hover { max-height:500px }",".controls-widget table.control-box td { overflow:hidden; border:0; background:DimGray; border-radius:30px }",".controls-widget table.control-box td .control-div { background: #EEEEEE; height:338px; padding: 5px 5px 5px 30px; box-shadow: 25px 0px 60px -15px inset }",".controls-widget table.control-box td * { background:transparent }",".controls-widget table.control-box .control-div td { border-radius:unset }",".controls-widget table.control-box .control-title { padding:7px 40px; color:white; background:DarkSlateGray; box-shadow: 25px 0px 70px -15px inset black }",".controls-widget *.live_string { display:inline-block; background:unset }",".dropdown { display:inline-block }",".dropdown-content { display:inline-block; transition:.2s; transform: scaleY(0); overflow:hidden; position: absolute;                                             z-index: 1; background:#E8F6FF; padding: 16px; margin-left:30px; min-width: 100px;                                             box-shadow: 5px 10px 16px 0px rgba(0,0,0,0.2) inset; border-radius:10px }",".dropdown-content a { color: black; padding: 4px 4px; display: block }",".dropdown a:hover { background: #f1f1f1 }",".controls-widget button { background: #4C9F50; color: white; padding: 6px; border-radius:9px;                                                 box-shadow: 4px 6px 16px 0px rgba(0,0,0,0.3); transition: background .3s, transform .3s }",".controls-widget button:hover, button:focus { transform: scale(1.3); color:gold }",".link { text-decoration:underline; cursor: pointer }",".show { transform: scaleY(1); height:200px; overflow:auto }",".hide { transform: scaleY(0); height:0px; overflow:hidden  }"];document.head.appendChild(document.createElement("style"));for(const t of s)document.styleSheets[document.styleSheets.length-1].insertRule(t,0);const i=t.appendChild(document.createElement("table"));i.className="control-box",this.row=i.insertRow(0),this.panels=[],this.scenes=e,this.render()}make_panels(t){this.timestamp=t,this.row.innerHTML="";const e=[...this.scenes];for(;e.length;){e.push(...e[0].children);const s=e.shift(),i=this.row.insertCell();this.panels.push(i),i.appendChild(Object.assign(document.createElement("div"),{textContent:s.constructor.name,className:"control-title"}));const n=i.appendChild(document.createElement("div"));n.className="control-div",s.control_panel=n,s.timestamp=t,s.make_control_panel()}}render(t=0){const e=[...this.scenes];for(;e.length;){e.push(...e[0].children);const s=e.shift();if(!s.timestamp||s.timestamp>this.timestamp){this.make_panels(t);break}}for(let t of this.panels)for(let e of t.querySelectorAll(".live_string"))e.onload(e);this.event=window.requestAnimFrame(this.render.bind(this))}}),h=r.Code_Manager=class{constructor(t){const e=RegExp([/((['"])(?:(?!\2|\\).|\\(?:\r\n|[\s\S]))*(\2)?|`(?:[^`\\$]|\\[\s\S]|\$(?!\{)|\$\{(?:[^{}]|\{[^}]*\}?)*\}?)*(`)?)/,/(\/\/.*)|(\/\*(?:[^*]|\*(?!\/))*(\*\/)?)/,/(\/(?!\*)(?:\[(?:(?![\]\\]).|\\.)*\]|(?![\/\]\\]).|\\.)+\/(?:(?!\s*(?:\b|[\u0080-\uFFFF$\\'"~({]|[+\-!](?!=)|\.?\d))|[gmiyu]{1,5}\b(?![\u0080-\uFFFF$\\]|\s*(?:[+\-*%&|^<>!=?({]|\/(?![\/*])))))/,/(0[xX][\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\d*\.\d+|\d+\.?)(?:[eE][+-]?\d+)?)/,/((?!\d)(?:(?!\s)[$\w\u0080-\uFFFF]|\\u[\da-fA-F]{4}|\\u\{[\da-fA-F]+\})+)/,/(--|\+\+|&&|\|\||=>|\.{3}|(?:[+\-\/%&|^]|\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\](){}])/,/(\s+)|(^$|[\s\S])/].map(t=>t.source).join("|"),"g");this.tokens=[],this.no_comments=[];let s=null;for(;null!==(s=e.exec(t));){let t={type:"invalid",value:s[0]};s[1]?(t.type="string",t.closed=!(!s[3]&&!s[4])):s[5]?t.type="comment":s[6]?(t.type="comment",t.closed=!!s[7]):s[8]?t.type="regex":s[9]?t.type="number":s[10]?t.type="name":s[11]?t.type="punctuator":s[12]&&(t.type="whitespace"),this.tokens.push(t),"whitespace"!=t.type&&"comment"!=t.type&&this.no_comments.push(t.value)}}},c=r.Code_Widget=class{constructor(t,e,i,n={}){const o=[".code-widget .code-panel { margin:auto; background:white; overflow:auto; font-family:monospace; width:1060px; padding:10px; padding-bottom:40px; max-height: 500px;                                                       border-radius:12px; box-shadow: 20px 20px 90px 0px powderblue inset, 5px 5px 30px 0px blue inset }",".code-widget .code-display { min-width:1200px; padding:10px; white-space:pre-wrap; background:transparent }",".code-widget table { display:block; margin:auto; overflow-x:auto; width:1080px; border-radius:25px; border-collapse:collapse; border: 2px solid black }",".code-widget table.class-list td { border-width:thin; background: #EEEEEE; padding:12px; font-family:monospace; border: 1px solid black }"];0==document.styleSheets.length&&document.head.appendChild(document.createElement("style"));for(const t of o)document.styleSheets[document.styleSheets.length-1].insertRule(t,0);this.associated_editor_widget=n.associated_editor,e&&Promise.resolve().then(s.bind(null,1)).then(s=>{this.build_reader(t,e,i,s.defs),n.hide_navigator||this.build_navigator(t,e,i,s.defs)})}build_reader(t,e,s,i){this.definitions=i;const n=t.appendChild(document.createElement("div"));n.className="code-panel",this.code_display=n.appendChild(document.createElement("div")),this.code_display.className="code-display",this.display_code(e)}build_navigator(t,e,s,n){const o=t.appendChild(document.createElement("table"));o.className="class-list";const r=o.insertRow(-1).insertCell(-1);r.colSpan=2,r.appendChild(document.createTextNode("Click below to navigate through all classes that are defined."));const a=r.appendChild(document.createElement("p"));a.style="text-align:center; margin:0; font-weight:bold",a.innerHTML="main-scene.js<br>Main Scene: ";const h=a.appendChild(document.createElement("a"));h.href="javascript:void(0);",h.addEventListener("click",()=>this.display_code(e)),h.textContent=e.name;const c=o.insertRow(-1).insertCell(-1);c.colSpan=2,c.style="text-align:center; font-weight:bold";const l=c.appendChild(document.createElement("a"));l.href="javascript:void(0);",l.addEventListener("click",()=>this.display_code()),l.textContent="This page's complete HTML source";const d=o.insertRow(-1);d.style="text-align:center",d.innerHTML="<td><b>tiny-graphics.js</b><br>(Always the same)</td>                              <td><b>All other class definitions from dependencies:</td>";const u=o.insertRow(-1);for(let t of[i.a,n]){const s=u.appendChild(document.createElement("td")),o=Object.keys(t).filter(t=>t!=e.name);s.style="white-space:normal";for(let t of o){const e=s.appendChild(document.createElement("a"));e.style["margin-right"]="80px",e.href="javascript:void(0);",e.addEventListener("click",()=>this.display_code(i.a[t]||n[t])),e.textContent=t,s.appendChild(document.createTextNode(" "))}}}display_code(t){this.associated_editor_widget&&this.associated_editor_widget.select_class(t),t?this.format_code(t.toString()):fetch(document.location.href).then(t=>t.text()).then(t=>this.format_code(t))}format_code(t){this.code_display.innerHTML="";const e={string:"chocolate",comment:"green",regex:"blue",number:"magenta",name:"black",punctuator:"red",whitespace:"black"};for(let s of new h(t).tokens)if("name"==s.type&&[...Object.keys(i.a),...Object.keys(this.definitions)].includes(s.value)){const t=this.code_display.appendChild(document.createElement("a"));t.href="javascript:void(0);",t.addEventListener("click",()=>this.display_code(i.a[s.value]||this.definitions[s.value])),t.textContent=s.value}else{const t=this.code_display.appendChild(document.createElement("span"));t.style.color=e[s.type],t.textContent=s.value}}},l=r.Editor_Widget=class{constructor(t,e,s,i={}){let n=[".editor-widget { margin:auto; background:white; overflow:auto; font-family:monospace; width:1060px; padding:10px;                                       border-radius:12px; box-shadow: 20px 20px 90px 0px powderblue inset, 5px 5px 30px 0px blue inset }",".editor-widget button { background: #4C9F50; color: white; padding: 6px; border-radius:9px; margin-right:5px;                                              box-shadow: 4px 6px 16px 0px rgba(0,0,0,0.3); transition: background .3s, transform .3s }",".editor-widget input { margin-right:5px }",".editor-widget textarea { white-space:pre; width:1040px; margin-bottom:30px }",".editor-widget button:hover, button:focus { transform: scale(1.3); color:gold }"];for(const t of n)document.styleSheets[0].insertRule(t,1);this.associated_canvas=s,this.options=i;const o=this.form=t.appendChild(document.createElement("form"));o.addEventListener("submit",t=>{t.preventDefault(),this.submit_demo()},!1),o.appendChild(document.createElement("p")).innerHTML="<i><b>What can I put here?</b></i>  A JavaScript class, with any valid JavaScript inside.  Your code can use classes from this demo,\n                               <br>or from ANY demo on Demopedia --  the dependencies will automatically be pulled in to run your demo!<br>";const r=this.run_button=o.appendChild(document.createElement("button"));r.type="button",r.style="background:maroon",r.textContent="Run with Changes";const a=this.submit=o.appendChild(document.createElement("button"));a.type="submit",a.textContent="Save as New Webpage";const h=this.author_box=o.appendChild(document.createElement("input"));h.name="author",h.type="text",h.placeholder="Author name";const c=this.password_box=o.appendChild(document.createElement("input"));c.name="password",c.type="text",c.placeholder="Password",c.style="display:none";const l=this.overwrite_panel=o.appendChild(document.createElement("span"));l.style="display:none",l.innerHTML="<label>Overwrite?<input type='checkbox' name='overwrite' autocomplete='off'></label>",(this.submit_result=o.appendChild(document.createElement("div"))).style="margin: 10px 0";const d=this.new_demo_code=o.appendChild(document.createElement("textarea"));d.name="new_demo_code",d.rows=this.options.rows||25,d.cols=140,e&&this.select_class(e)}select_class(t){this.new_demo_code.value=t.toString()}fetch_handler(t,e){return fetch(t,{body:e,method:void 0===e?"GET":"POST",headers:{"content-type":"application/json"}}).then(t=>t.ok?Promise.resolve(t.json()):Promise.reject(t.status))}submit_demo(){const t=Array.from(this.form.elements).reduce((t,e)=>(!e.value||["checkbox","radio"].includes(e.type)&&!e.checked||(t[e.name]=e.value),t),{});return this.submit_result.innerHTML="",this.fetch_handler("/submit-demo?Unapproved",JSON.stringify(t)).then(t=>{t.show_password&&(this.password_box.style.display="inline"),t.show_overwrite&&(this.overwrite_panel.style.display="inline"),this.submit_result.innerHTML+=t.message+"<br>"}).catch(t=>{this.submit_result.innerHTML+="Error "+t+" when trying to upload.<br>"})}},d=r.Text_Widget=class{constructor(t,e,s){const i=[".text-widget { background: white; width:1060px;                        padding:0 10px; overflow:auto; transition:1s; overflow-y:scroll; box-shadow: 10px 10px 90px 0 inset LightGray}",".text-widget div { transition:none } "];0==document.styleSheets.length&&document.head.appendChild(document.createElement("style"));for(const t of i)document.styleSheets[document.styleSheets.length-1].insertRule(t,0);Object.assign(this,{element:t,scenes:e,webgl_manager:s}),this.render()}render(t=0){this.scenes[0]?this.scenes[0].show_explanation(this.element,this.webgl_manager):this.event=window.requestAnimFrame(this.render.bind(this))}};var u=s(1);s(2);const p=document.getElementById("main-canvas"),m=[new u.default];new r.Canvas_Widget(p,m)}]);
//# sourceMappingURL=bundle.js.map